name: Checkov Scan

permissions:
  contents: read
  pull-requests: write

on:
  pull_request: {}
  workflow_dispatch: {}

jobs:
  checkov_scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov scan
        run: |
          checkov --soft-fail --output json > checkov_results.json

      - name: Report Checkov results
        if: github.event_name == 'pull_request'
        run: |
          echo "Preparing Checkov results"
          python - <<EOF
          import json
          import sys

          with open('checkov_results.json') as f:
            results = json.load(f)

          failed_checks = []
          if isinstance(results, list):
            for result in results:
              if 'failed_checks' in result:
                failed_checks.extend(result['failed_checks'])
          elif isinstance(results, dict):
            failed_checks = results.get('results', {}).get('failed_checks', [])
          
          # failed_checks = results.get('results', {}).get('failed_checks', [])
          output = '### Checkov Scan Results\n'
          
          if not failed_checks:
            output += "No issues found."

          for check in failed_checks:
            check_id = check.get('check_id', 'N/A')
            check_name = check.get('check_name', 'N/A')
            severity = check.get('severity', 'N/A')
            file_path = check.get('file_path', 'N/A')
            file_line = check.get('file_line_range', [0])[0]
            guideline = check.get('guideline', 'N/A')
    
            output += f'- **{file_path}:{file_line} - `{check_id}` - {check_name} - ({severity}) - {guideline}\n'

          with open('checkov_output.md', 'w') as out_file:
            out_file.write(output)
          EOF

      - name: Post comment with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('checkov_output.md', 'utf8');
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: results
            });